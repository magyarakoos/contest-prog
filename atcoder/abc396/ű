#include <bits/stdc++.h>
using namespace std;
#define int int64_t

const int INF = 1e18, MAXN = 2e5, MOD = 1e9 + 7;

#define cases 0
void solve() {
    int N, M;
    cin >> N >> M;
    vector<vector<array<int, 2>>> g(N + 1);
    vector<int> deg(N + 1);
    for (int i = 0, x, y, z; i < M; i++) {
        cin >> x >> y >> z;
        g[x].push_back({y, z});
        g[y].push_back({x, z});
        deg[x]++;
        deg[y]++;
    }
    vector<int> order(N + 1), val(N + 1);
    iota(order.begin(), order.end(), 0);
    sort(order.begin() + 1, order.end(),
         [&](int i, int j) { return deg[i] > deg[j]; });
    for (int i = 1; i <= N; i++) {
        int u = order[i];
        int xr = INF;
        for (auto [v, w] : g[u]) {
            xr = min(xr, w ^ val[v]);
        }
        val[u] = xr;
    }
    for (int u = 1; u <= N; u++) cout << val[u] << " ";
}

int32_t main() {
    cin.tie(0), ios::sync_with_stdio(0);
    int T = 1;
    if (cases) cin >> T;
    while (T--) solve();
}
